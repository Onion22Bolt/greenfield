syntax = "proto3";
package bnbchain.greenfield.challenge;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bnb-chain/greenfield/x/challenge/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // Challenges which will be emitted in each block, including user triggered or randomly triggered.
  uint64 challenge_count_per_block = 1 [(gogoproto.moretags) = "yaml:\"challenge_count_per_block\""];

  // The count of blocks to stand for the expiration of challenges.
  uint64 challenge_expire_period = 2 [(gogoproto.moretags) = "yaml:\"challenge_expire_period\""];

  // The count of blocks to stand for the period in which the same storage and object info cannot be slashed again.
  uint64 slash_cooling_off_period = 3 [(gogoproto.moretags) = "yaml:\"slash_cooling_off_period\""];

  // The slash denom defines the slash coin denomination.
  string slash_denom = 4;

  // The slash coin amount will be calculated from the size of object info, and adjusted by this rate.
  string slash_amount_size_rate = 5 [
    (gogoproto.moretags) = "yaml:\"slash_amount_size_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // The minimal slash amount.
  string slash_amount_min = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // The maximum slash amount.
  string slash_amount_max = 7 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // The ratio of slash amount for all validators' rewards.
  string reward_validator_ratio = 8 [
    (gogoproto.moretags) = "yaml:\"reward_validator_ratio\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // The ratio of slash amount for challenger's rewards.
  string reward_challenger_ratio = 9 [
    (gogoproto.moretags) = "yaml:\"reward_challenger_ratio\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // Heartbeat interval defines the frequency of heartbeat based on challenges.
  uint64 heartbeat_interval = 10 [(gogoproto.moretags) = "yaml:\"heartbeat_interval\""];

  // The reward to heartbeat transaction submitter will be calculated based on this rate.
  string heartbeat_reward_rate = 11 [
    (gogoproto.moretags) = "yaml:\"heartbeat_reward_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // The reward to heartbeat transaction submitter will be adjusted based on the threshold.
  string heartbeat_reward_threshold = 12 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
